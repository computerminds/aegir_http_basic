<?php


/**
 * Implementation of hook_form_alter()
 */
function hosting_http_basic_auth_form_alter(&$form, $form_state, $form_id) {
  if ($form_id == 'site_node_form') {

    $form['http_basic_auth'] = array(
      '#type' => 'fieldset',
      '#title' => t('HTTP Basic Authentication'),
      '#description' => t('Specify a password to ensure that only people that know the specifed username and password can access the site.'),
    );

    $form['http_basic_auth']['http_basic_auth_username'] = array(
      '#type' => 'textfield',
      '#title' => t('Username'),
      '#default_value' => $form['#node']->http_basic_auth_username ? $form['#node']->http_basic_auth_username : '',
      '#weight' => 0,
    );
    $form['http_basic_auth']['http_basic_auth_password'] = array(
      '#type' => 'textfield',
      '#title' => t('Password'),
      '#default_value' => $form['#node']->http_basic_auth_password ? $form['#node']->http_basic_auth_password : '',
      '#weight' => 1,
    );
    $form['http_basic_auth']['http_basic_auth_message'] = array(
      '#type' => 'textfield',
      '#title' => t('Message'),
      '#default_value' => $form['#node']->http_basic_auth_message ? $form['#node']->http_basic_auth_message : t('Restricted access'),
      '#weight' => 2,
    );
    return $form;
  }
}

/**
 * Implementation of hook_insert()
 */
function hosting_http_basic_auth_insert($node) {
  if (!empty($node->http_basic_auth_username)) {
    db_query("INSERT INTO {hosting_http_basic_auth} (vid, nid, username, password, message) VALUES (%d, %d, '%s', '%s', '%s')", $node->vid, $node->nid, $node->http_basic_auth_username, $node->http_basic_auth_password, $node->http_basic_auth_message);
  }
}

/**
 * Implementation of hook_update()
 */
function hosting_http_basic_auth_update($node) {
  if (FALSE === db_fetch_array(db_query("SELECT username AS http_basic_auth_username, password AS http_basic_auth_password FROM {hosting_http_basic_auth} WHERE vid = %d", $node->vid))) {
    hosting_http_basic_auth_insert($node);
  }
  else {
    db_query("UPDATE {hosting_http_basic_auth} SET username = '%s', password = '%s', message ='%s' WHERE vid = %d", $node->http_basic_auth_username, $node->http_basic_auth_password, $node->http_basic_auth_message, $node->vid);
  }

}

/**
 * Implementation of hook_delete()
 */
function hosting_http_basic_auth_delete($node) {
  db_query("DELETE FROM {hosting_http_basic_auth} WHERE nid=%d", $node->nid);
}

/**
 * Implementation of hook_delete_revision()
 */
function hosting_http_basic_auth_delete_revision($node) {
  db_query("DELETE FROM {hosting_http_basic_auth} WHERE vid=%d", $node->vid);
}

/**
 * Implementation of hook_nodeapi()
 */
function hosting_http_basic_auth_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
  if ($node->type == 'site') {
    switch ($op) {
    case 'insert':
        hosting_http_basic_auth_insert($node);
        break;
      case 'update':
        hosting_http_basic_auth_update($node);
        break;
      case 'delete' :
        hosting_http_basic_auth_delete($node);
        break;
      case 'delete revision':
        hosting_http_basic_auth_delete_revision($node);
        break;
      case 'validate' :
        if (!empty($node->http_basic_auth_username) && empty($node->http_basic_auth_password)) {
          form_set_error('http_basic_auth_password', t('You must specify a password for the HTTP basic authentication.'));
        }
        break;
      case 'load':
        $additions = db_fetch_array(db_query("SELECT username AS http_basic_auth_username, password AS http_basic_auth_password, message AS http_basic_auth_message FROM {hosting_http_basic_auth} WHERE vid = %d", $node->vid));
        return $additions;
        break;
    }
  }
}

/**
* Implementation of hook_feeds_node_processor_targets_alter().
*/
function hosting_http_basic_auth_feeds_node_processor_targets_alter(&$targets, $content_type) {
  if ($content_type == 'site') {
    $targets['http_basic_auth_username'] = array(
      'name' => t('HTTP Basic Auth - username'),
      'description' => t('Set this to enable HTTP basic auth on the site.'),
      'callback' => 'hosting_http_basic_auth_set_target_http_basic_auth_simple',
    );

    $targets['http_basic_auth_password'] = array(
      'name' => t('HTTP Basic Auth - password'),
      'description' => t('The password, this is not transferred securely and should be considered in the public domain.'),
      'callback' => 'hosting_http_basic_auth_set_target_http_basic_auth_simple',
    );

    $targets['http_basic_auth_message'] = array(
      'name' => t('HTTP Basic Auth - username'),
      'description' => t('A message to show when prompting the user for username and password.'),
      'callback' => 'hosting_http_basic_auth_set_target_http_basic_auth_message',
    );

  }
}

/**
 * Mapping callback for feeds.
 */
function hosting_http_basic_auth_set_target_http_basic_auth_simple($node, $target, $value) {
  if (!empty($value)) {
    $node->$target = $value;
  }
}

/**
 * Mapping callback for feeds.
 */
function hosting_http_basic_auth_set_target_http_basic_auth_message($node, $target, $value) {
  $node->$target = !empty($value) ? $value : t('Restricted access');
}
